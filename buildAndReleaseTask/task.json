{
    "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
    "id": "b4d11fbc-5ee3-4a40-a101-9eb3f08e0910",
    "name": "ScribeSolutionDeployment",
    "friendlyName": "Scribe Solution Deployment",
    "description": "Deploy Scribe solutions",
    "helpMarkDown": "",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "author": "Tolu Adepoju",
    "version": {
        "Major": 1,
        "Minor": 1,
        "Patch": 24
    },
    "groups": [
        {
            "name":"scribeCredentialsGroup",
            "displayName": "Scribe Credentials",
            "isExpanded": false
        },{
            "name":"createSolutionGroup",
            "displayName": "Create or Update a solution",
            "isExpanded": true,
            "visibleRule": "scribeAction = createSolution"
        }
    ],
    "instanceNameFormat": "Scribe Task - $(scribeAction)",
    "inputs": [
        {
            "name": "scribeBaseurl",
            "type": "string",
            "label": "Scribe Base Url",
            "defaultValue": "https://api.scribesoft.com/v1/orgs",
            "required": true,
            "groupName": "scribeCredentialsGroup"
        },{
            "name": "scribeOrganizationId",
            "type": "string",
            "label": "Scribe Organization Id",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The scribe organization id",
            "groupName": "scribeCredentialsGroup"
        },{
            "name": "scribeUsername",
            "type": "string",
            "label": "Scribe Username",
            "defaultValue": "",
            "required": true,
            "groupName": "scribeCredentialsGroup"
        },{
            "name": "scribePassword",
            "type": "string",
            "label": "Scribe Password",
            "defaultValue": "",
            "required": true,
            "groupName": "scribeCredentialsGroup"
        },{
            "name": "scribeAction",
            "type": "pickList",
            "label": "The type of action to be performed",
            "required": true,
            "properties": {"EditableOptions": "False"},
            "defaultValue": "createSolution",
            "options": {
                "testConnection": "Test Connection",
                "createSolution": "Create/Update Solution",
                "deleteSolution": "Delete Solution",
                "getConnectionEntities": "Get Entities",
                "startSolution": "Start Solution"
            }
        },{
            "name": "solutionName",
            "type": "string",
            "label": "Solution Name",
            "defaultValue": "",
            "required": false,
            "visibleRule": "scribeAction = deleteSolution || scribeAction = createSolution",
            "properties": {
                "maxLength" : "50"
            }
        },{
            "name": "solutionDescription",
            "type": "multiLine",
            "label": "Description",
            "defaultValue": "",
            "required": false,
            "properties": {
                "maxLength" : "256",
                "rows" : "2",
                "resizable" : true
            },
            "groupName": "createSolutionGroup"
        },{
            "name": "solutionType",
            "type": "pickList",
            "label": "Solution Type",
            "defaultValue": "replication",
            "required": false,
            "options": {
                "Replication" : "Replication"
            },
            "groupName": "createSolutionGroup"
        },{
            "name": "solutionEnabled",
            "type": "boolean",
            "label": "Enable Solution",
            "defaultValue": true,
            "required": false,
            "groupName": "createSolutionGroup"
        },{
            "name": "agentName",
            "type": "string",
            "label": "Agent Name",
            "defaultValue": "",
            "required": false,
            "groupName": "createSolutionGroup",
            "properties": {
                "maxLength" : "25"
            }
        },{
            "name": "sourceConnectionName",
            "type": "string",
            "label": "Source Connection Name",
            "defaultValue": "",
            "required": false,
            "groupName": "createSolutionGroup",
            "properties": {
                "maxLength" : "25"
            }
        },{
            "name": "targetConnectionName",
            "type": "string",
            "label": "Target Connection Name",
            "defaultValue": "",
            "required": false,
            "groupName": "createSolutionGroup",
            "properties": {
                "maxLength" : "25"
            }
        },{
            "name": "entitySelectionMode",
            "type": "pickList",
            "label": "Entities",
            "defaultValue": "Selected",
            "required": false,
            "options": {
                "Recommended" : "Recommended",
                "All" : "All",
                "Selected" : "Selected"
            },
            "groupName": "createSolutionGroup"
        },{
            "name": "selectedEntities",
            "type": "multiLine",
            "label": "Selected Entities",
            "defaultValue": "[\"firstEntity\", \"secondEntity\"]",
            "required": false,
            "visibleRule": "entitySelectionMode = Selected",
            "properties": {
                "maxLength" : "10000",
                "rows" : "4",
                "resizable" : true
            },
            "groupName": "createSolutionGroup",
            "helpMarkDown": "List of Dynamics CE entities as a string array. e.g. [\"firstEntity\", \"secondEntity\", ...]. Use a pipeline $(variable) if the maximum length of 10,000 is inadequate."
        },{
            "name": "connectionName",
            "type": "string",
            "label": "Connection Name",
            "defaultValue": "",
            "required": false,
            "visibleRule": "scribeAction = testConnection || scribeAction = getConnectionEntities"
        }
    ],
    "execution": {
        "Node10": {
            "target": "index.js"
        }
    }
}